"""
Test case for the print_sorted(self) instance method.

This test checks if the class method print_sorted(self) correctly
prints a sorted list.

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()
>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)

>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
	...
TypeError: name must be an integer

>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
	...
ValueError: age must be greater than 0

>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
	...
ValueError: distance must be greater than 0

>>> bg.integer_validator()
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> bg.integer_validator("distance")
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator(2, -4)
Traceback (most recent call last):
	...
ValueError: Unknown format code 's' for object of type 'int'

>>> bg.integer_validator("", -1)
Traceback (most recent call last):
	...
ValueError:  must be greater than 0

>>> bg.integer_validator(4)
Traceback (most recent call last):
	...
TypeError: integer_validator() missing 1 required positional argument: 'value'

>>> bg.integer_validator("mekus", None)
Traceback (most recent call last):
	...
TypeError: mekus must be an integer

>>> bg.integer_validator(None, None)
Traceback (most recent call last):
	...
TypeError: unsupported format string passed to NoneType.__format__

"""

# vim: set ft=rst
