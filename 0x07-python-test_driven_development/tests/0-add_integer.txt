"""
Test case for the add_integer() function.

This test checks if the add_integer() function correctly
calculates the summation of #2 integer.

>>> add_integer = __import__('0-add_integer').add_integer

>>> add_integer(1, 2)
3

>>> add_integer(100, -2)
98

>>> add_integer(2)
100

>>> add_integer(100.3, -2)
98

>>> add_integer(4, "School")
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(1, None)
Traceback (most recent call last):
...
TypeError: b must be an integer

>>> add_integer(None, None)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("None", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer(10.3, 2)
12

>>> add_integer(10, 9.9)
19

>>> add_integer("4", "5")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer("4", "5")
Traceback (most recent call last):
...
TypeError: a must be an integer

>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'

>>> add_integer(1.1, 2.3)
3

"""

# vim: set ft=rst
